{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingshjEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var albumPicasso = {\n    name: 'The Colors',\n    artist: 'Pablo Picasso',\n    label: 'Cubism',\n    year: '1881',\n    albumArtUrl: '/images/album-placeholder.png',\n    songs: [\n        { name: 'Blue', length: '4:26' },\n        { name: 'Green', length: '3:14' },\n        { name: 'Red', length: '5:01' },\n        { name: 'Pink', length: '3:21'},\n        { name: 'Magenta', length: '2:15'}\n    ]\n};\n\n// Another Example Album\nvar albumMarconi = {\n    name: 'The Telephone',\n    artist: 'Guglielmo Marconi',\n    label: 'EM',\n    year: '1909',\n    albumArtUrl: '/images/album-placeholder.png',\n    songs: [\n        { name: 'Hello, Operator?', length: '1:01' },\n        { name: 'Ring, ring, ring', length: '5:01' },\n        { name: 'Fits in your pocket', length: '3:21'},\n        { name: 'Can you hear me now?', length: '3:14' },\n        { name: 'Wrong phone number', length: '2:15'}\n    ]\n};\n\nvar currentlyPlayingSong = null;\n\n// Generates dynamic track data for each album\nvar createSongRow = function(songNumber, songName, songLength) {\n    var template =\n            '<tr>'\n            + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n            + '  <td class=\"col-md-9\">' + songName + '</td>'\n            + '  <td class=\"col-md-2\">' + songLength + '</td>'\n            + '</tr>'\n        ;\n\n    var $row = $(template);\n\n    var onHover = function (event) {\n        var songNumberCell = $(this).find('.song-number');\n        var songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n            songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n        }\n    };\n\n    var offHover = function (event) {\n        var songNumberCell = $(this).find('.song-number');\n        var songNumber = songNumberCell.data('song-number');\n        if (songNumber !== currentlyPlayingSong) {\n            songNumberCell.html(songNumber);\n        }\n    };\n};\n\nvar clickHandler = function(event) {\n        var songNumber = $(this).data('song-number');\n\n    if (currentlyPlayingSong !== null) {\n        // Revert to song number for currently playing song because user started playing new song.\n        var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n        currentlyPlayingCell.html(currentlyPlayingSong);\n    }\n\n    if (currentlyPlayingSong !== songNumber) {\n        // Switch from Play -> Pause button to indicate new song is playing.\n        $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n        currentlyPlayingSong = songNumber;\n    }\n    else if (currentlyPlayingSong === songNumber) {\n        // Switch from Pause -> Play button to pause currently playing song.\n        $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n        currentlyPlayingSong = null;\n    }\n\n       $row.find('.song-number').click(clickHandler);\n    $row.hover(onHover, offHover);\n    return $row;\n};\n\nvar changeAlbumView = function(album) {\n    // live update for the album title\n    var $albumTitle = $('.album-title');\n    $albumTitle.text(album.name);\n\n    // live update for the album artist\n    var $albumArtist = $('.album-artist');\n    $albumArtist.text(album.artist);\n\n    // live update for the meta information\n    var $albumMeta = $('.album-meta-info');\n    $albumMeta.text(album.year + \" on \" + album.label);\n\n    // live update for the album image\n    var $albumImage = $('.album-image img');\n    $albumImage.attr('src', album.albumArtUrl);\n\n    // live update for the Song List\n    var $songList = $(\".album-song-listing\");\n    $songList.empty();\n    var songs = album.songs;\n    for (var i = 0; i < songs.length; i++) {\n        var songData = songs[i];\n        var $newRow = createSongRow(i + 1, songData.name, songData.length);\n        $songList.append($newRow);\n    }\n\n};\n\nvar updateSeekPercentage = function($seekBar, event) {\n    var barWidth = $seekBar.width();\n    var offsetX = event.pageX - $seekBar.offset().left;\n\n    var offsetXPercent = (offsetX  / barWidth) * 100;\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(100, offsetXPercent);\n\n    var percentageString = offsetXPercent + '%';\n    $seekBar.find('.fill').width(percentageString);\n    $seekBar.find('.thumb').css({left: percentageString});\n};\n\nvar setupSeekBars = function() {\n\n    $seekBars = $('.player-bar .seek-bar');\n    $seekBars.click(function(event) {\n        updateSeekPercentage($(this), event);\n    });\n\n    $seekBars.find('.thumb').mousedown(function(event){\n        var $seekBar = $(this).parent();\n\n        $seekBar.addClass('no-animate');\n        //Adding jquery bindings\n        $(document).bind('mousemove.thumb', function(event){\n            updateSeekPercentage($seekBar, event);\n        });\n\n        //Releasing jquery bindings\n        $(document).bind('mouseup.thumb', function(){\n            $seekBar.removeClass('no-animate');\n            $(document).unbind('mousemove.thumb');\n            $(document).unbind('mouseup.thumb');\n        });\n    });\n};\n\nif (document.URL.match(/\\/album.html/)) {\n    $(document).ready(function() {\n        changeAlbumView(albumPicasso);\n        setupSeekBars();\n    });\n}\n","/**\n * Created by sullivanvalaer on 1/20/15.\n */\n    //require('./landing');\n    //require('./album');\n    //require('./collection');\n    //require('./profile');\nvar albumPicasso = {\n    name: 'The Colors',\n    artist: 'Pablo Picasso',\n    label: 'Cubism',\n    year: '1881',\n    albumArtUrl: '/images/album-placeholder.png',\n\n    songs: [\n        { name: 'Blue', length: 163.38, audioUrl: '/music/placeholders/blue' },\n        { name: 'Green', length: 105.66 , audioUrl: '/music/placeholders/green' },\n        { name: 'Red', length: 270.14, audioUrl: '/music/placeholders/red' },\n        { name: 'Pink', length: 154.81, audioUrl: '/music/placeholders/pink' },\n        { name: 'Magenta', length: 375.92, audioUrl: '/music/placeholders/magenta' }\n    ]\n};\n\nvar albumMarconi = {\n    name: 'First Explosion',\n    artist: 'Bang Bang',\n    label: 'First Explosion',\n    year: '1929',\n    albumArtUrl: '/images/album-placeholder.png',\n\n    songs: [\n        { name: 'One', length: 163.38, audioUrl: '/music/placeholders/blue' },\n        { name: 'Two', length: 105.66 , audioUrl: '/music/placeholders/green' },\n        { name: 'Three', length: 270.14, audioUrl: '/music/placeholders/red' },\n        { name: 'Four', length: 154.81, audioUrl: '/music/placeholders/pink' },\n        { name: 'Five', length: 375.92, audioUrl: '/music/placeholders/magenta' }\n    ]\n};\n\nblocJams = angular.module('BlocJams', ['ui.router']);\n\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n    $locationProvider.html5Mode(true);\n\n    $stateProvider.state('landing', {\n        url: '/',\n        controller: 'Landing.controller',\n        templateUrl: '/templates/landing.html'\n    });\n    $stateProvider.state('collection', {\n        url: '/collection',\n        controller: 'Collection.controller',\n        templateUrl: '/templates/collection.html'\n    });\n    $stateProvider.state('album', {\n        url: '/album/:id',\n        templateUrl: '/templates/album.html',\n        controller: 'Album.controller'\n    });\n    $stateProvider.state('dashboard', {\n        url: '/dashboard',\n        templateUrl: '/templates/dashboard.html',\n        controller: 'dashboard.controller'\n    });\n    $stateProvider.state('profile', {\n        url: '/profile',\n        templateUrl: '/templates/profile.html',\n        controller: 'profile.controller'\n    });\n}]);\n\n\n// This is a cleaner way to call the controller than crowding it on the module definition.\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\n    $scope.subText = \"Turn the music up!\";\n    $scope.subTextClicked = function() {\n        $scope.subText += '!';\n    };\n    $scope.albumURLs = [\n        '/images/album-placeholders/album-1.jpg',\n        '/images/album-placeholders/album-2.jpg',\n        '/images/album-placeholders/album-3.jpg',\n        '/images/album-placeholders/album-4.jpg',\n        '/images/album-placeholders/album-5.jpg',\n        '/images/album-placeholders/album-6.jpg',\n        '/images/album-placeholders/album-7.jpg',\n        '/images/album-placeholders/album-8.jpg',\n        '/images/album-placeholders/album-9.jpg',\n    ];\n}]);\n\n//controller for for collection\nblocJams.controller('Collection.controller', ['$scope','SongPlayer', \"Metric\", function($scope, SongPlayer, metric) {\n    $scope.albums = [];\n    $scope.albums.push(albumPicasso, albumMarconi);\n    $scope.playAlbum = function(album){\n        SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n        metric.registerAlbumClicks(album);\n    }\n}]);\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', '$stateParams', 'Metric', function($scope, SongPlayer, $stateParams, Metric) {\n    $scope.albums = [];\n    $scope.albums.push(albumPicasso, albumMarconi);\n    $scope.currentAlbum = $scope.albums[$stateParams.id];\n    var hoveredSong = null;\n    var playingSong = null;\n\n        $scope.onHoverSong = function(song) {\n        hoveredSong = song;\n         };\n\n        $scope.offHoverSong = function(song) {\n        hoveredSong = null;\n        };\n\n    $scope.getSongState = function(song) {\n        if (song === SongPlayer.currentSong && SongPlayer.playing) {\n            return 'playing';\n        }\n        else if (song === hoveredSong) {\n            return 'hovered';\n        }\n        return 'default';\n    };\n\n    $scope.playSong = function(song) {\n        SongPlayer.setSong($scope.currentAlbum, song);\n    };\n\n    $scope.pauseSong = function(song) {\n        SongPlayer.pause();\n    };\n\n}]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n    $scope.songPlayer = SongPlayer;\n\n    $scope.volumeClass = function() {\n        return {\n            'fa-volume-off': SongPlayer.volume == 0,\n            'fa-volume-down': SongPlayer.volume <= 70 && SongPlayer.volume > 0,\n            'fa-volume-up': SongPlayer.volume > 70\n        }\n    };\n\n    SongPlayer.onTimeUpdate(function(event, time){\n        $scope.$apply(function(){\n            $scope.playTime = time;\n        });\n    });\n}]);\n\nblocJams.service('Metric', ['$rootScope', function($rootScope) {\n    $rootScope.songPlays = [];\n    $rootScope.albumClicks = [];\n    $rootScope.artistClicks = [];\n\n    return {\n        // Function that records a metric object by pushing it to our $rootScope array.\n        registerSongPlay: function(songObj) {\n            // Add time to event register.\n            songObj['playedAt'] = new Date();\n            $rootScope.songPlays.push(songObj);\n        },\n        //Function that records a metric object of albums clicked and pushed it to the $rootScope array\n        registerAlbumClicks: function(albumObj) {\n            // Add time to event register.\n            //albumObj['playedAt'] = new Date();\n            $rootScope.albumClicks.push(albumObj);\n            console.log($rootScope.albumClicks);\n        },\n        //Function that records a metric object of artists clicked and pushed it to the $rootScope array\n        registerArtistsClicks: function(artistObj) {\n            // Add time to event register.\n            //artistObj['playedAt'] = new Date();\n            $rootScope.artistClicks.push(artistObj);\n            console.log(artistObj);\n        },\n        listSongsPlayed: function() {\n            var songs = [];\n            angular.forEach($rootScope.songPlays, function(song) {\n                // Check to make sure the song isn't added twice.\n                if (songs.indexOf(song.name) != -1) {\n                    songs.push(song.name);\n                }\n            });\n            return songs;\n        }\n    };\n\n}]);\n\nblocJams.controller(\"dashboard.controller\", [\"$scope\",\"Metric\",\"$rootScope\",function($scope,Metrics,$rootScope){\n    $scope.songPlays = $rootScope.songPlays;\n    $scope.albumClicks = $rootScope.albumClicks;\n    $scope.artistClicks = $rootScope.artistClicks;\n    $scope.state = \"song\";\n    $scope.buttonClick = function(button) {\n        $scope.state = button\n\n    };\n    $scope.state = \"album\";\n    $scope.buttonClick = function(button) {\n        $scope.state = button\n\n    };\n    $scope.state = \"artist\";\n    $scope.buttonClick = function(button) {\n        $scope.state = button\n\n    }\n\n}]);\n\nblocJams.service('SongPlayer', ['$rootScope',\"Metric\", function($rootScope,Metric) {\n    var currentSoundFile = null;\n    var trackIndex = function(currentAlbum, song) {\n        return album.songs.indexOf(song);\n    };\n\n    return {\n        currentSong: null,\n        currentAlbum: null,\n        playing: false,\n        volume: 90,\n\n        play: function() {\n            this.playing = true;\n            currentSoundFile.play();\n            Metric.registerSongPlay(this.currentSong);\n            console.log(this.currentAlbum);\n            Metric.registerAlbumClicks(this.currentAlbum);\n            Metric.registerArtistsClicksClicks(this.currentAlbum);\n            //Metric.registerArtistsClicks(this.)\n        },\n        pause: function() {\n            this.playing = false;\n            currentSoundFile.pause();\n        },\n        next: function() {\n            var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n            currentTrackIndex++;\n            if (currentTrackIndex >= this.currentAlbum.songs.length) {\n                    currentTrackIndex = 0;\n            }\n                var song = this.currentAlbum.songs[currentTrackIndex];\n                this.setSong(this.currentAlbum, song);\n        },\n        previous: function() {\n            var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n            currentTrackIndex--;\n            if (currentTrackIndex < 0) {\n                currentTrackIndex = this.currentAlbum.songs.length - 1;\n            }\n                var song = this.currentAlbum.songs[currentTrackIndex];\n                this.setSong(this.currentAlbum, song);\n        },\n        seek: function(time) {\n            // Checks to make sure that a sound file is playing before seeking.\n            if (currentSoundFile) {\n                // Uses a Buzz method to set the time of the song.\n                currentSoundFile.setTime(time);\n            }\n        },\n            onTimeUpdate: function(callback) {\n                return $rootScope.$on('sound:timeupdate', callback);\n            },\n\n        setVolume: function(volume) {\n            if(currentSoundFile){\n                currentSoundFile.setVolume(volume);\n            }\n            this.volume = volume;\n        },\n\n        setSong: function(album, song) {\n            if (currentSoundFile) {\n                currentSoundFile.stop();\n            }\n            this.currentAlbum = album;\n            this.currentSong = song;\n\n            currentSoundFile = new buzz.sound(song.audioUrl, {\n                formats: [ \"mp3\" ],\n                preload: true\n            });\n                currentSoundFile.bind('timeupdate', function(e){\n                    $rootScope.$broadcast('sound:timeupdate', this.getTime());\n                });\n\n            this.play();\n        }\n    };\n}]);\n\nblocJams.directive('slider', ['$document', function($document){\n    var calculateSliderPercentFromMouseEvent = function($slider, event) {\n        var offsetX =  event.pageX - $slider.offset().left;\n        var sliderWidth = $slider.width();\n        var offsetXPercent = (offsetX  / sliderWidth);\n        offsetXPercent = Math.max(0, offsetXPercent);\n        offsetXPercent = Math.min(1, offsetXPercent);\n        return offsetXPercent;\n    };\n\n    var numberFromValue = function(value, defaultValue) {\n        if (typeof value === 'number') {\n            return value;\n        }\n\n        if(typeof value === 'undefined') {\n            return defaultValue;\n        }\n\n        if(typeof value === 'string') {\n            return Number(value);\n        }\n    };\n\n    return {\n        templateUrl: '/templates/directives/slider.html',\n        replace: true,\n        restrict: 'E',\n        scope: {\n            onChange: '&'\n        },\n        link: function(scope, element, attributes) {\n            scope.value = 0;\n            scope.max = 100;\n            var $seekBar = $(element);\n                attributes.$observe('value', function(newValue) {\n                    scope.value = numberFromValue(newValue, 0);\n                });\n                attributes.$observe('max', function(newValue) {\n                    scope.max = numberFromValue(newValue, 100) || 100;\n                });\n\n            var percentString = function () {\n                var value = scope.value || 0;\n                var max = scope.max || 100;\n                percent = value / max * 100;\n                return percent + \"%\";\n            };\n\n            scope.fillStyle = function() {\n                return {width: percentString()};\n            };\n\n            scope.thumbStyle = function() {\n                return {left: percentString()};\n            };\n            scope.onClickSlider = function(event) {\n                var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n                scope.value = percent * scope.max;\n                notifyCallback(scope.value);\n            };\n            scope.trackThumb = function() {\n                $document.bind('mousemove.thumb', function(event){\n                    var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n                    scope.$apply(function(){\n                        scope.value = percent * scope.max;\n                        notifyCallback(scope.value);\n                    });\n                });\n\n                //cleanup\n                $document.bind('mouseup.thumb', function(){\n                    $document.unbind('mousemove.thumb');\n                    $document.unbind('mouseup.thumb');\n                });\n            };\n            var notifyCallback = function(newValue) {\n                if(typeof scope.onChange === 'function') {\n                    scope.onChange({value: newValue});\n                }\n            };\n        }\n    };\n}]);\n\nblocJams.filter('timecode', function(){\n    return function(seconds) {\n        seconds = Number.parseFloat(seconds);\n\n        // Returned when no time is provided.\n        if (Number.isNaN(seconds)) {\n            return '-:--';\n        }\n\n        // make it a whole number\n        var wholeSeconds = Math.floor(seconds);\n\n        var minutes = Math.floor(wholeSeconds / 60);\n\n        remainingSeconds = wholeSeconds % 60;\n\n        var output = minutes + ':';\n\n        // zero pad seconds, so 9 seconds should be :09\n        if (remainingSeconds < 10) {\n            output += '0';\n        }\n\n        output += remainingSeconds;\n\n        return output;\n    }\n});\n\n\n","/**\n * Created by sullivanvalaer on 1/22/15.\n */\nvar buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n        + '  <div class=\"collection-album-image-container\">'\n        + '    <img src=\"/images/album-placeholder.png\"/>'\n        + '  </div>'\n        + '  <div class=\"caption album-collection-info\">'\n        + '    <p>'\n        + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n        + '      <br/>'\n        + '      <a href=\"/album.html\"> Artist name </a>'\n        + '      <br/>'\n        + '      X songs'\n        + '      <br/>'\n        + '      X:XX Total Length'\n        + '    </p>'\n        + '  </div>'\n        + '</div>';\n\n    return $(template);\n};\n\nvar updateCollectionView = function() {\n    var $collection = $(\".collection-container .row\");\n    $collection.empty();\n\n    for (var i = 0; i < 33; i++) {\n        var $newThumbnail = buildAlbumThumbnail();\n        $collection.append($newThumbnail);\n    }\n\n    var onHover = function (event) {\n        $(this).append(buildAlbumOverlay(\"/album.html\"));\n    };\n\n    var offHover = function(event) {\n        $(this).find('.collection-album-image-overlay').remove();\n    };\n\n    $collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\nif (document.URL.match(/\\/collection.html/)) {\n    $(document).ready(function() {\n        updateCollectionView();\n    });\n}\n\nvar buildAlbumOverlay = function(albumURL) {\n    var template =\n            '<div class=\"collection-album-image-overlay\">'\n            + '  <div class=\"collection-overlay-content\">'\n            + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n            + '      <i class=\"fa fa-play\"></i>'\n            + '    </a>'\n            + '    &nbsp;'\n            + '    <a class=\"collection-overlay-button\">'\n            + '      <i class=\"fa fa-plus\"></i>'\n            + '    </a>'\n            + '  </div>'\n            + '</div>'\n        ;\n    return $(template);\n};","/**\n * Created by sullivanvalaer on 1/21/15.\n */\n$(document).ready(function() {\n    $('.hero-content h3').click(function(){\n        var subText = $(this).text();\n        $(this).text(subText + \"!\");\n    });\n\nvar onHoverAction = function(event) {\n    console.log('Hover action triggered.');\n    $(this).animate({'margin-top': '10px'});\n};\n\nvar offHoverAction = function(event) {\n    console.log('Off-hover action triggered.');\n    $(this).animate({'margin-top': '0px'});\n};\n\n$('.selling-points .point').hover(onHoverAction, offHoverAction);\n});","// keeps our tab button container in memorty for selection later in the function\nvar tabsContainer = \".user-profile-tabs-container\";\nvar selectTabHandler = function(event) {\n    $tab = $(this);\n    $(tabsContainer + \" li\").removeClass('active');\n    $tab.parent().addClass('active');\n    selectedTabName = $tab.attr('href');\n    console.log(selectedTabName);\n    $(\".tab-pane\").addClass('hidden');\n    $(selectedTabName).removeClass('hidden');\n    event.preventDefault();\n};\n\nif (document.URL.match(/\\/profile.html/)) {\n    $(document).ready(function() {\n        var $tabs = $(tabsContainer + \" a\");\n        $tabs.click(selectTabHandler);\n        $tabs[0].click();\n    });\n}"]}